{"version":3,"file":"static/js/809.5b4bea51.chunk.js","mappings":"yBAOA,IAAMA,EAAa,IAAIC,IAEvBC,KAAKC,UAAY,SAACC,GAChB,QAA6BC,IAAzBD,EAAME,KAAKC,UAAyB,CACtC,IAAMC,EAAYN,KAAKO,YAAW,WAChCP,KAAKQ,YAAY,CAAEC,WAAYP,EAAME,KAAKK,aAC1CX,EAAWY,OAAOR,EAAME,KAAKK,WAC/B,GAAGP,EAAME,KAAKC,WACdP,EAAWa,IAAIT,EAAME,KAAKK,WAAYH,EACxC,KAAO,CACL,IAAMA,EAAYR,EAAWc,IAAIV,EAAME,KAAKK,YAC5CT,KAAKa,aAAaP,GAClBR,EAAWY,OAAOR,EAAME,KAAKK,WAC/B,CACF,C","sources":["shared/helpers/timerWorker.ts"],"sourcesContent":["declare const self: DedicatedWorkerGlobalScope\n\ntype TimerData = {\n  callbackId: number\n  timeoutMs?: number\n}\n\nconst timeoutIds = new Map<number, number>()\n\nself.onmessage = (event: MessageEvent<TimerData>) => {\n  if (event.data.timeoutMs !== undefined) {\n    const timeoutId = self.setTimeout(() => {\n      self.postMessage({ callbackId: event.data.callbackId })\n      timeoutIds.delete(event.data.callbackId)\n    }, event.data.timeoutMs)\n    timeoutIds.set(event.data.callbackId, timeoutId)\n  } else {\n    const timeoutId = timeoutIds.get(event.data.callbackId)\n    self.clearTimeout(timeoutId)\n    timeoutIds.delete(event.data.callbackId)\n  }\n}\n\nexport {}\n"],"names":["timeoutIds","Map","self","onmessage","event","undefined","data","timeoutMs","timeoutId","setTimeout","postMessage","callbackId","delete","set","get","clearTimeout"],"sourceRoot":""}